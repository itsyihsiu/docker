server {
    listen 80 default_server;
    listen [::]:80 default_server;

	# SSL configuration
	#
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;

    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;

	root /var/www/html;

	index index.html index.php; 

	server_name _;

    # Define custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# pass PHP scripts to FastCGI server
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
		fastcgi_pass unix:/run/php/php8.3-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	}

    # Define location for custom error pages
    location = /custom_404.html {
        internal;
    }

    # Substitution filter to add the status code dynamically
    location = /custom_50x.html {
        internal;
        add_header Content-Type text/html;
        sub_filter '{{ERROR_CODE}}' '$status';
        sub_filter_once on;
    }

    location = / {
        return 301 $scheme://$host/blog;
    }
}

#server {
    #listen 80;
    #server_name _;
    #return 301 https://$host$request_uri;
#}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
